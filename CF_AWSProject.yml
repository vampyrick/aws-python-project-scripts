Resources: 

  LambdaIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'



  myAWSLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import json
            def lambda_handler(event, context): 
              message = f" Hello {event['queryStringParameters']['name']} from {event['queryStringParameters']['country']} !"
                return {
                  'statusCode': 200,
                  'body': json.dumps(message)
                }
            
      Description: "Python function that takes input and returns output"
      FunctionName: "myAWSLambda1"
      PackageType: "Zip"
      Role: !GetAtt LambdaIamRole.Arn
      Runtime: Python 3.7

  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
      Effect: 'Allow'
      Principal:
        Service:
          - 'apigateway.amazonaws.com'
        Action:
            - 'sts:AssumeRole'
        Path: '/'
        Policies:
          - PolicyName: LambdaAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: 'Allow'
                Action: 'lambda:*'
                Resource: !GetAtt myAWSLambda.Arn


  myhttpAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description: "Simple http API to trigger python lambda script"
      Name: "my-http-api1"
      ProtocolType: "http"
      Tags: JSON

  myAWSLambdaTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt myhttpAPI.Arn
      FunctionName: !Ref myAWSLambda



  LambdaIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref myhttpAPI
      IntegrationType: "AWS"
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt myAWSLambda.Arn
          - /invocations